name: Deploy til dev-fss
on:
  repository_dispatch:
    types: [deploy-command]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/tiltaksgjennomforing-varsel
      
jobs:
  deploy-branch:
    runs-on: ubuntu-latest
    
    steps:
      - name: Sett variabler for image, namespace og cluster
        run: |
           echo "::set-env name=TAG::$(echo ${{ github.event.client_payload.slash_command.arg1 }} | cut -c16-22)"
           echo "::set-env name=IMAGE::$IMAGE_BASE:${{ github.event.client_payload.slash_command.arg1 }}"

      - name: Sjekk ut kode
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Sjekk om branch er oppdatert mot master
        run: |
          git fetch origin master
          git merge-base --is-ancestor origin/master $TAG

      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          TEAM: arbeidsgiver
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: naiserator.yaml
          PRINT_PAYLOAD: true
          VARS: nais/dev-fss.json
          REF: ${{ env.TAG }}
          VERSION: ${IMAGE}
          
      - name: Oppdater kommentar med deployment status ved feil
        if: failure()
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.createComment({
                                    issue_number: ${{ github.event.client_payload.github.payload.issue.number }},
                                    owner: context.repo.owner,
                                    repo: context.repo.repo,
                                    body: 'Deploy av <b>${{ env.TAG }}</b> feilet ❌'
            })

      - name: Oppdater kommentar med deployment status ved ok
        if: success()
        uses: actions/github-script@0.5.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ['deploy', 'dev-fss']
            }).then(response => {
              response.data.forEach(issue => {
                github.issues.removeLabel({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: issue.number,
                  name: 'dev-fss'
                });
              });
            });

            github.issues.createComment({
              owner: context.issue.owner,
              repo: context.issue.repo,
              issue_number: ${{ github.event.client_payload.github.payload.issue.number }},
              body: 'Deploy av <b>${{ env.TAG }}</b> ok ✅'
            });

            github.issues.addLabels({
              owner: context.issue.owner,
              repo: context.issue.repo,
              issue_number: ${{ github.event.client_payload.github.payload.issue.number }},
              labels: ['dev-fss']
            });
