name: Deploy til dev-fss
on:
  repository_dispatch:
    types: [deploy-command]
env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  IMAGE_BASE: docker.pkg.github.com/${{ github.repository }}/tiltaksgjennomforing-varsel
      
jobs:
  deploy-branch:
    runs-on: ubuntu-latest
    
    steps:
      - name: Sett variabler for image, namespace og cluster
        run: |
           echo "::set-env name=TAG::$(echo ${{ github.event.client_payload.slash_command.arg1 }} | cut -c16-22)"
           echo "::set-env name=IMAGE::$IMAGE_BASE:${{ github.event.client_payload.slash_command.arg1 }}"

      - name: Sjekk ut kode
        uses: actions/checkout@v1
        with:
          ref: ${{ env.TAG }}

      - name: Kontroller om branch er utdatert
        uses: srt32/git-actions@v0.0.3
        args: git merge-base --is-ancestor origin/master $TAG

      - name: Stopp deploy hvis branch er utdatert
        if: failure()
        run: echo "Branchen mÃ¥ merges eller rebases mot origin/master." && exit 1
    
      - name: Deploy til dev-fss
        uses: nais/deploy/actions/deploy@v1
        env:
          TEAM: arbeidsgiver
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: naiserator.yaml
          PRINT_PAYLOAD: true
          VARS: nais/dev-fss.json
          REF: ${{ env.TAG }}
          VERSION: ${IMAGE}
          
      - name: Oppdater kommentar med deployment status ved feil
        if: failure()
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.NOTIFICATION}}
          script: |
            const issue = { owner: context.issue.owner,
                            repo: context.issue.repo,
                            issue_number: ${{ github.event.client_payload.github.payload.issue.number }} }
            github.issues.createComment({...issue,
                                    title: 'Deploy av ${{ env.TAG }}',
                                    body: '>deploy ${{ github.event.client_payload.slash_command.args }} feilet'})
            github.issues.addLabels({...issue, labels: ['deployment-failed','dev-fss'])
   
      - name: Oppdater kommentar med deployment status
        if: success()
        uses: actions/github-script@0.4.0
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const issue = { owner: context.issue.owner,
                            repo: context.issue.repo,
                            issue_number: ${{ github.event.client_payload.github.payload.issue.number }} }
            github.issues.createComment({...issue,
                                    body: '>deploy ${{ github.event.client_payload.slash_command.args }} var OK'})
            github.issues.addLabels({...issue, labels: ['deployment','dev-fss']})
   
